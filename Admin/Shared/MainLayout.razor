@inherits LayoutComponentBase
@inject Blazor.Fluxor.IStore Store
@inject ApiService Api
@using Blazor.Fluxor
@using Store
@inject IState<LoginState> LoginState
@inject IDispatcher Dispatcher
@Store.Initialize()

<Dialog />

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="d-flex flex-row align-items-center justify-content-end top-row px-4">
        @if (LoginState.Value.LoggedIn)
        {
            <button class="btn btn-sm btn-light">@LoginState.Value.UserInfo.User</button>
            <button onclick="@Logout" class="btn btn-sm btn-light">Logout</button>
        }
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>
@functions {
     protected override void OnInit()
    {
        base.OnInit();
        LoginState.Subscribe(this);
    }
    protected override async Task OnInitAsync()
    {
        var userInfo = await Api.UpdateLoginDetailAsync();
        var branch = await Api.LoadLocal<Branch>("branch");
        Dispatcher.Dispatch(new ActionLogin(userInfo));
        Dispatcher.Dispatch(new ActionSetBranch(branch));
        StateHasChanged();
    }
    protected async Task Logout()
    {
        Dispatcher.Dispatch(new ActionLogout());
        await Api.LogoutAsync();
    }
}